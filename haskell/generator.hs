import Control.Monad (forM_)
import System.IO
import Text.Printf (printf)

ident :: Int -> Int -> String -> String
ident tabWidth times =
  (++) $
    concat $
      replicate times $ replicate tabWidth ' '

numName :: [Char]
numName = "个十百千万"

generate :: Int -> String
generate n =
  unlines $
    map (ident 4 2) $
      printf "case %s:" s :
      map
        (ident 4 1)
        ( printf "cout << \"是 %d 位数\" << endl;" l :
          zipWith (printf "cout << \"%c位数是%c\" << endl;") numName r
            ++ [ printf "cout << \"倒过来是%s\" << endl;" r,
                 "break;"
               ]
        )
  where
    s = show n
    l = length s
    r = reverse s

main :: IO ()
main = do
  file <- openFile "main.cpp" WriteMode
  hSetEncoding file utf8
  hPutStr file $
    unlines $
      [ "#include <iostream>",
        "using namespace std;",
        "int main()",
        "{"
      ]
        ++ map
          (ident 4 1)
          [ "cout << \"请给出一个不多于5位数的整数:\";",
            "int x;",
            "cin >> x;",
            "switch (x) {"
          ]
  forM_ [0 .. 99999] $ hPutStr file . generate
  hPutStr file $
    unlines
      [ ident 4 1 "}",
        ident 4 1 "cout << \"Code generated by Haskell.\" << endl;",
        "}"
      ]
  hFlush file
  putStrLn "Code generated."